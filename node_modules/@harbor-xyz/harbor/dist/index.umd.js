!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("isomorphic-unfetch"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["isomorphic-unfetch","fs","path"],t):(e||self).harbor=t(e.isomorphicUnfetch,e.fs,e.path)}(this,function(e,t,r){function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=/*#__PURE__*/n(e);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}function i(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,u(e,t)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}var c=require("fs"),a=require("project-bin-path"),f=function(e){return new Promise(function(t,r){try{return Promise.resolve(a(process.cwd()).then(function(e){try{return c.existsSync(e+"/harborSDK")?Promise.resolve(e):Promise.resolve((t=require("child_process").exec,new Promise(function(e,r){t("npm bin",function(t,r,n){t&&console.warn(t),e(r||n)})}))).then(function(e){return e.trim()})}catch(e){return Promise.reject(e)}var t})).then(function(n){return(0,require("child_process").exec)(n+"/harborSDK "+e+" --output json",function(e,n,s){e&&(console.error("exec error: "+e),r(JSON.parse(e)));var o=JSON.parse(n);if("error"==o.type){var i=function(e){switch(e){case"AUTH_ERROR":return 401;case"INTERNAL_ERROR":return 500;default:return 400}}(o.status);r({message:o.message,status:i})}else t(o)})})}catch(e){return Promise.reject(e)}})},h=/*#__PURE__*/function(){function e(e){var t,r;this.userKey=void 0,this.projectKey=void 0,this.baseUrl=void 0,this.isAuthenticated=void 0,this.userKey=e.userKey,this.projectKey=e.projectKey,this.baseUrl="https://api-staging.goharbor.com",this.isAuthenticated=!1,(t=this.userKey,r=this.projectKey,f("configure keys --user-key "+t+" --project-key "+r)).then(function(e){return e}).catch(console.error)}return e.prototype.invoke=function(e,t){var r=""+this.baseUrl+e,n=o({},t,{headers:{"Content-Type":"application/json","user-key":this.userKey,"project-key":this.projectKey}});return s.default(r,n).then(function(e){return e.json()}).catch(function(e){throw new Error(e)})},e}();function p(e,t){try{var r=e()}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}var m,l=/*#__PURE__*/function(e){function n(){for(var t,r=arguments.length,n=new Array(r),s=0;s<r;s++)n[s]=arguments[s];return(t=e.call.apply(e,[this].concat(n))||this).testnetName=void 0,t}i(n,e);var s=n.prototype;return s.checkHealth=function(){return this.invoke("/health_check")},s.authenticate=function(){try{var e=this;return Promise.resolve(p(function(){return Promise.resolve(e.invoke("/authenticate",{method:"POST",body:JSON.stringify({user_key:e.userKey,project_key:e.projectKey})})).then(function(t){return 200===t.status&&(e.isAuthenticated=!0),Promise.resolve({isAuthenticated:e.isAuthenticated,message:t.message})})},function(e){return Promise.reject({message:e.message,status:401})}))}catch(e){return Promise.reject(e)}},s.testnet=function(e){try{var t=this;return t.isAuthenticated?(t.testnetName=e,Promise.resolve(p(function(){return Promise.resolve(t.invoke("/testnet/"+t.testnetName)).then(function(e){var r;if(200!=e.status)return Promise.reject({message:e.message,status:e.status});var n=null==e||null==(r=e.data)?void 0:r.testnet[0],s=n.id,i=n.testnet_chains,u=n.testnet_off_chain_actors;return 200===e.status?Promise.resolve({id:s,name:n.name,status:n.status,chains:function(){return i.map(function(e){return o({},e,{accounts:t.accounts.bind(t,e.chain),logs:t.logs.bind(t,s,e.chain,0)})})},offChainActors:function(){return u.map(function(e){return o({},e,{ports:function(){return e.ports},logs:t.logs.bind(t,s,e.name,0)})})}}):void 0})},function(e){return Promise.reject({message:e.message,status:400})}))):Promise.reject({message:"Not authenticated",status:401})}catch(e){return Promise.reject(e)}},s.accounts=function(e){try{var t=this;return t.isAuthenticated?Promise.resolve(p(function(){return Promise.resolve(t.invoke("/testnet/"+t.testnetName+"/chain/"+e+"/accounts")).then(function(e){var t=e.data;return Promise.resolve(void 0===t?[]:t)})},function(e){return Promise.reject({message:e.message,status:400})})):Promise.reject({message:"Not authenticated",status:401})}catch(e){return Promise.reject(e)}},s.configure=function(e,t){return f("configure keys --user-key "+e+" --project-key "+t)},s.init=function(){return f("init")},s.logs=function(e,t,r){return f("log --testnet-id "+e+" --name "+t+" --time-period "+r)},s.apply=function(e,n){var s=this;if(!n)return Promise.reject({message:"Testnet name is required",status:400});if("string"==typeof e)return f("apply "+n+" --config "+e).then(function(e){return s.testnet(n)});var o=r.join(process.cwd(),"harbor.config.json");return t.writeFileSync(o,JSON.stringify(e),{flag:"w"}),f("apply "+n+" --config "+o).then(function(e){return s.testnet(n)})},s.clone=function(e,t){var r=this;return e?t?f("clone "+e+" "+t).then(function(e){return r.testnet(t)}):Promise.reject({message:"New Testnet name is required",status:400}):Promise.reject({message:"Existing testnet name and new testnet name is required",status:400})},s.start=function(e,t){var r=this,n="start "+e;return t&&(n="edit "+e+" start "+t),f(""+n).then(function(t){return r.testnet(e)})},s.stop=function(e,t){var r=this,n="kill testnet --name "+e;return t&&(n="edit "+e+" stop "+t),f(""+n).then(function(t){return r.testnet(e)})},s.quickstart=function(e){var t=this;return f("quickstart "+e).then(function(r){return t.testnet(e)})},n}(h),y=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return i(t,e),t}(h);return m=y,[l].forEach(function(e){Object.getOwnPropertyNames(e.prototype).forEach(function(t){Object.defineProperty(m.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t)||Object.create(null))})}),y});
